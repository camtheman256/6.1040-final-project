PATH_replies:
  get:
    summary: Find a Reply
    description: Used to get the reply in collection based on requestId and/or userId. 
    parameters:
      - in: query
        name: request
        required: false
        schema:
          type: string
        description: corresponding requestId of request
      - in: query
        name: user
        required: false
        schema:
          type: string
        description: gapi userId
    responses:
      '200':
        description: 'OK'
        content:
          application/json:
            schema:
              type: array
              properties:
                request: 
                  $ref: "../schemas/_index.yml#/Reply"
            example:
              {
                replies: [
                  {
                    "_id": "reply id",
                    "author": "105454022127406520411",
                    "request": "638a77f66e0efba60f844cad",
                    "textContent": "content",
                    "dateCreated": "December 2nd 2022, 5:11:02 pm",
                    "anonymous": true,
                    "upvotingUsers": [],
                  }
                ]
              }

  delete:
    summary: Delete a reply
    description: Used to delete a reply from collection.
    parameters:
      - in: path
        name: replyId
        required: true
        schema:
          type: string
    responses:  
      '200':
        description: 'OK'
        content:
          application/json:
            schema:
              type: object
              properties:
                message: 
                  type: string
            example:
              message: "Reply has successfully been deleted."
PATH_replies_post:
  post:
    summary: Create a reply
    description: Create a reply as a user for a request
    parameters:
      - in: path
        name: request_id
        required: true
        schema:
          type: string
        description: corresponding requestId of request to create reply under
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../schemas/_index.yml#/replyCreatePayload"
    responses:
      '200':
        description: 'OK'
        content:
          application/json:
            schema:
              type: object
              properties:
                message: 
                  type: string
                request:
                  $ref: '../schemas/_index.yml#/Reply'
            example:
              message: "Successfully created reply"
              request: {
                  author: "105454022127406520411",
                  request: "638a77f66e0efba60f844cad",
                  content: "reply content",
              }